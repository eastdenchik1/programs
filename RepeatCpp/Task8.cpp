/*
* Тема:  Повторение С++. Объединения (Union). 
* Автор: Свиридов Денис.
* Сайт:  https://sviridovden.ru
*/
#include <iostream>
using namespace std;

union {
	short int num1;
	int num2;
	long int num3;
}myunion;

int main(){
	
	myunion.num1 = 1231;
	cout << myunion.num1 << endl;
	myunion.num3 = 12312123123123;
	cout << myunion.num3 << endl;
	cout << myunion.num1 << endl;
	

	return 0;
}


/*

Объединение – это такой формат данных, который подобен структуре. Оно (объединение) способно хранить в пределах одной зарезервированной области памяти различные типы данных. Но в каждый определенный момент времени в объединении хранится только один из этих типов данных и возможно использовать лишь значение этого элемента (компонента). 

после того, как мы записали значение в элемент name3 типа  long int , уже невозможно нормально обращаться к элементу name1 . Все потому, что в  их общую память уже записано значение long int, а переменная типа short int неспособна работать с данными такого объема. 


Поэтому, чтобы опять работать с данными типа short int  необходимо снова присвоить  элементу name1 новое значение. Вот и получается – память одна и та же, а переменные в ней размещаются разные. К какой обращаемся – такая и запрашивает из этой памяти значение.

Элементы объединения располагаются в памяти начиная с одного места  (как бы накладываются друг на друга), в отличии от элементов структуры (они располагаются в памяти последовательно один за другим).

Применение объединений вызвано необходимостью экономии памяти, когда нужно хранить и использовать данные разных типов, но обращаться к ним можно не одновременно.

Если бы мы описали просто набор переменных не объединяя их в union, то для их размещения потребовалось бы 2 + 4 + 4 байта = 10 байт. Вот и экономия. А так объединение занимает 4 байта. Целых 6 байт сэкономили, натрамбовав три переменные в один отрезок памяти.

К слову нужно заметить, что эта технология умудрилась получить неплохое продолжение, и в современных языках используется везде где нужно и не нужно. СиШарп, PHP, Делфи, современные наследники Си плюс плюс – все они используют такие объединения. Только в современном мире они уже называются variant.

В переменную variant можно без проблем запихнуть до 10 байт (10 это максимум для 32-х разрядных систем под вещественное число). Соответственно в эти 10 байт и все семейство целых и вещественных, и указатели, и объекты, и строки (точнее описатели строк или указатели на них) вмещаются.

На сегодняшний день экономия памяти не так актуальна, как 15-20 лет назад. Конечно, никто не запрещает использовать union, но зачем? Если есть более удобные на сегодня средства работы с памятью для программиста.

Следует отметить также, что программы для выполнения в память загружаются с избытком (т.е. для программы выделяется количество памяти, зачастую чрезвычайно большее чем надо). Это можно наблюдать, написав программу с одной переменной. Казалось бы – переменная 4 байта, но открыв диспетчер задач в Винде программа “почему-то” заняла 10 килобайт. Так работает современная операционная система, выделяя памяти с лихвой. В 90-х, увы, такой роскоши и быть не могло.





*/
